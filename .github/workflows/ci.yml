name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Docker Compose - bring up services
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          docker compose up -d --build

      - name: Wait for Postgres to be ready
        run: |
          for i in $(seq 1 30); do
            docker compose exec -T db pg_isready -U "${{ secrets.DB_USER }}" -d "${secrets.DB_NAME}" && break
            echo "Waiting for postgres..."
            sleep 1
          done

      - name: Install dependencies (for migrate/test)
        # Use legacy peer deps to avoid ERESOLVE in CI environment
        run: npm ci --legacy-peer-deps

      - name: Set env for migration and tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_SSL: ${{ secrets.DATABASE_SSL }}
        run: |
          echo "DATABASE_URL=${{ env.DATABASE_URL }}" >> $GITHUB_ENV
          echo "DATABASE_SSL=${{ env.DATABASE_SSL }}" >> $GITHUB_ENV
          echo "NODE_ENV=test" >> $GITHUB_ENV

      - name: Run migrations
        run: npm run migrate

      - name: Build
        run: npm run build

      - name: Run compiled migrations
        run: node dist/scripts/migrate.js

      - name: Run tests
        run: npm run test

      - name: Docker Compose down
        if: always()
        run: docker compose down -v
